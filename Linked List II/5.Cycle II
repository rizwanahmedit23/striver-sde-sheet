/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        if(head == NULL || head->next == NULL){
            return NULL;
        }
        
        ListNode *fast = head, *slow = head;
        bool cycleExists = false;
        while(fast != NULL && fast->next != NULL){
            fast = fast->next->next;
            slow = slow->next;
            
            if(fast == slow){
                cycleExists = true;
                break;
            }    
        }
        if(cycleExists){
                fast = head;
                while(fast != slow){
                    slow = slow->next;
                    fast = fast->next;
                }
                return fast;
        } 
        return NULL;
    }
};
