/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    ListNode* addToList(ListNode* head, ListNode* tail, int elem){
        ListNode *newNode = new ListNode(elem);
        if(head == NULL){
            return newNode;
        }
        tail ->next = newNode;
        return head;
    }
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int val = 0, carry = 0;
        ListNode *head = NULL, *tail = NULL;
        while(l1 != NULL || l2 != NULL){
            if(l1 != NULL){
                val += l1->val;
                l1 = l1 -> next;
            }
            if(l2 != NULL){
                val+=l2->val;
                l2 = l2->next;
            }
            val += carry;
            int elem = val%10;
            head = addToList(head, tail, elem);
            if(tail == NULL) tail = head;
            else tail = tail ->next;
            if(val > 9){
                carry = 1;
            }
            else{
                carry = 0;
            }
            val = 0;
        }
        if(carry == 1){
            head = addToList(head, tail, 1);
        }
        return head;
    }
};
