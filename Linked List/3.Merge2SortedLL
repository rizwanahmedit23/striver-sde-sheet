/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL || list2 == NULL){
            if(list1 == NULL)   return list2;
            else    return list1;
        }
        
        ListNode* head = NULL, *temp1, *temp2, *tail = NULL;
        if(list1 -> val < list2 -> val){
            head = list1;
            tail = list1;
            temp1 = list2;
        }
        else{
            head = list2;
            tail = list2;
            temp1 = list1;
        }
        
        while(tail->next != NULL){
            if(tail->next->val < temp1->val){
                tail = tail->next;
            }
            else{
                temp2 = tail->next;
                tail->next = temp1;
                tail = tail->next;
                temp1 = temp2;
            }
        }
        tail->next = temp1;
        return head;
    }
};
